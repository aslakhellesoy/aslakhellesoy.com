---
import IconMoon from "@/assets/icons/IconMoon.svg";
import IconSunHigh from "@/assets/icons/IconSunHigh.svg";
import { SITE } from "@/config";

const { pathname } = Astro.url;

// Remove trailing slash from current pathname if exists
const currentPath =
  pathname.endsWith("/") && pathname !== "/" ? pathname.slice(0, -1) : pathname;

const isActive = (path: string) => {
  const currentPathArray = currentPath.split("/").filter(p => p.trim());
  const pathArray = path.split("/").filter(p => p.trim());

  return currentPath === path || currentPathArray[0] === pathArray[0];
};
---

<header class="w-full">
  <nav class="mx-auto flex max-w-4xl items-center justify-between p-4">
    <a href="/" class:list={["hover:underline", { underline: isActive("/") }]}>
      Home
    </a>

    <div class="flex items-center space-x-8">
      <a
        href="/posts"
        class:list={["hover:underline", { underline: isActive("/posts") }]}
      >
        Blog
      </a>
      <a
        href="/about"
        class:list={["hover:underline", { underline: isActive("/about") }]}
      >
        About Me
      </a>

      {
        SITE.lightAndDarkMode && (
          <button
            id="theme-btn"
            class="focus-outline relative h-8 w-8 hover:opacity-70"
            title="Toggles light & dark"
            aria-label="auto"
            aria-live="polite"
          >
            <IconMoon class="absolute top-[50%] left-[50%] -translate-x-[50%] -translate-y-[50%] scale-100 rotate-0 transition-all dark:scale-0 dark:-rotate-90" />
            <IconSunHigh class="absolute top-[50%] left-[50%] -translate-x-[50%] -translate-y-[50%] scale-0 rotate-90 transition-all dark:scale-100 dark:rotate-0" />
          </button>
        )
      }
    </div>
  </nav>
</header>

<script>
  function toggleNav() {
    const menuBtn = document.querySelector("#menu-btn");
    const menuItems = document.querySelector("#menu-items");
    const menuIcon = document.querySelector("#menu-icon");
    const closeIcon = document.querySelector("#close-icon");

    if (!menuBtn || !menuItems || !menuIcon || !closeIcon) return;

    menuBtn.addEventListener("click", () => {
      const openMenu = menuBtn.getAttribute("aria-expanded") === "true";

      menuBtn.setAttribute("aria-expanded", openMenu ? "false" : "true");
      menuBtn.setAttribute("aria-label", openMenu ? "Open Menu" : "Close Menu");

      menuItems.classList.toggle("hidden");
      menuIcon.classList.toggle("hidden");
      closeIcon.classList.toggle("hidden");
    });
  }

  toggleNav();

  // Runs on view transitions navigation
  document.addEventListener("astro:after-swap", toggleNav);
</script>
